import ssl
import certifi
import httpx

# –û–±—Ö–æ–¥ –æ—à–∏–±–∫–∏ SSL-—Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
httpx._config.DEFAULT_CA_BUNDLE_PATH = certifi.where()
ssl._create_default_https_context = ssl._create_unverified_context

from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes

# –ú–µ–Ω—é –∫–Ω–æ–ø–æ–∫
main_menu = ReplyKeyboardMarkup(
    [['üìÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è', 'üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã'], ['üí° –°–æ–≤–µ—Ç—ã']],
    resize_keyboard=True
)

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç, Ram! üëã –Ø —Ç–≤–æ–π –±–æ—Ç.\n–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ:",
        reply_markup=main_menu
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–Ω–æ–ø–æ–∫
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text

    if text == 'üìÑ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è':
        await update.message.reply_text("–í–æ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è, –∫–æ—Ç–æ—Ä—É—é —Ç—ã –∏—Å–∫–∞–ª...")
    elif text == 'üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã':
        await update.message.reply_text("–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã: +7 777 123 4567")
    elif text == 'üí° –°–æ–≤–µ—Ç—ã':
        await update.message.reply_text("–°–æ–≤–µ—Ç –¥–Ω—è: –Ω–µ –∑–∞–±—ã–≤–∞–π –ø–∏—Ç—å –≤–æ–¥—É üíß")
    else:
        await update.message.reply_text("–í—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
app = ApplicationBuilder().token("8309598474:AAHNpHhN8s3nVphRPnmSQLA0H6oDhI8uPGQ").build()

app.add_handler(CommandHandler("start", start))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –∂–¥—ë—Ç —Å–æ–æ–±—â–µ–Ω–∏–π...")
app.run_polling()
